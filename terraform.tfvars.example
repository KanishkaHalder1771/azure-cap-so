# Copy this file to terraform.tfvars and customize the values below

# Basic Configuration
resource_group_name = "selfhost-production-rg"
location           = "East US"  # Change to your preferred Azure region

# Domain Configuration - UPDATE THESE TO YOUR DOMAINS
cap_domain           = "capso.example.com"
minio_api_domain     = "api.minio.example.com"
minio_console_domain = "console.minio.example.com"

# Network Configuration
vnet_address_space               = ["10.0.0.0/16"]
subnet_address_prefixes          = ["10.0.1.0/24"]     # Main subnet for VMs
appgw_subnet_address_prefixes    = ["10.0.2.0/24"]     # Application Gateway subnet

# VM Configuration
vm_size             = "Standard_B1s"        # 1 vCPU, 1GB RAM - Cost optimized
minio_vm_size       = "Standard_B1s"        # 1 vCPU, 1GB RAM - Cost optimized
admin_username      = "selfhostuser"
ssh_public_key_path = "~/.ssh/id_rsa.pub"

# Storage Configuration
minio_disk_size_gb = 50                     # MinIO object storage
cap_disk_size_gb = 25                       # MySQL database storage

# MinIO Storage Configuration
minio_root_user        = "minio-admin-2024"
minio_root_password    = "MinIO-Secure-Password-2024!"

# Cap Application Configuration - CHANGE THESE VALUES FOR PRODUCTION!
# Generate secure random values for production deployment
database_encryption_key = "your-secure-64-char-hex-string-here"  # Generate with: openssl rand -hex 32
nextauth_secret        = "your-secure-64-char-hex-string-here"  # Generate with: openssl rand -hex 32

# S3/MinIO Configuration for Cap (should match MinIO credentials)
cap_aws_access_key     = "minio-admin-2024"                    # Same as minio_root_user
cap_aws_secret_key     = "MinIO-Secure-Password-2024!"         # Same as minio_root_password

# Database Configuration
mysql_root_password    = "CapMySQL-Secure-Password-2024!"

# Production Examples (replace with your own secure values):
# database_encryption_key = "a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456"
# nextauth_secret        = "b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456a1"
# minio_root_user        = "selfhost-minio-admin"
# minio_root_password    = "YourSecureMinIOPassword2024!"
# cap_aws_access_key     = "selfhost-minio-admin"
# cap_aws_secret_key     = "YourSecureMinIOPassword2024!"
# mysql_root_password    = "YourSecureMySQLPassword2024!"

# MinIO Disk Sizing Guidelines:
# - 50GB: Basic testing and small workloads
# - 100GB: Small to medium production workloads  
# - 250GB: Medium production workloads
# - 500GB+: Large production workloads with lots of media files
#
# Note: You can resize the disk later via Azure portal if needed

# Architecture Notes:
# This configuration uses Azure Application Gateway (Layer 7) for intelligent routing:
# - capso.example.com → Cap VM:3000
# - api.minio.example.com → MinIO VM:9000 (S3 API)
# - console.minio.example.com → MinIO VM:9001 (Web Console)
#
# Benefits:
# - Domain-based routing (no port numbers in URLs)
# - SSL termination at the gateway
# - WAF capabilities
# - Auto-scaling support
# - Health checks and failover

# DNS Configuration Instructions:
# After deployment, you'll need to configure DNS records:
# 1. Get the Application Gateway IP from Terraform outputs
# 2. Create A records in your DNS provider:
#    - capso.example.com → APPLICATION_GATEWAY_IP
#    - api.minio.example.com → APPLICATION_GATEWAY_IP  
#    - console.minio.example.com → APPLICATION_GATEWAY_IP
# 3. Configure SSL certificates (Azure-managed certs or Let's Encrypt)

# SSL Configuration (Optional - Enable HTTPS with Key Vault certificates)
# Set ssl_enabled = 1 to enable SSL, 0 to disable
ssl_enabled              = 0                           # 0 = HTTP only, 1 = HTTP + HTTPS
key_vault_name          = "kv-letsencrypt-example"     # Your Key Vault name
key_vault_resource_group = ""                          # Leave empty if in same RG as main deployment
ssl_certificate_name    = "wildcard-example-com"       # Your certificate name in Key Vault

# SSL Setup Instructions:
# 1. Ensure your Key Vault exists with SSL certificates
# 2. Set ssl_enabled = 1 above
# 3. Update key_vault_name and ssl_certificate_name with your actual values
# 4. Deploy with: terraform apply
# 5. Both HTTP and HTTPS will be available:
#    - http://capso.example.com (HTTP)
#    - https://capso.example.com (HTTPS - requires ssl_enabled = 1)

# Cap Application Configuration
resend_api_key = "re_dqFf7Jvq_KC7Btz7MCLkCzQEvDx6EM17e"  # Your Resend API key for email functionality
resend_from_domain = "example.com"  # Your verified domain in Resend for sending emails 